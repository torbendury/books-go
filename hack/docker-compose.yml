---
version: '3.5'
services:
  # PostgreSQL database instance
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      # some cool voodoo to let you magically create stuff on DB instance init.
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./sql/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
    ports:
      - '5432:5432'
    restart: unless-stopped
  # pgAdmin server for easy debugging
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    restart: unless-stopped
    depends_on:
      - postgres
  # books-go backend API
  books-go:
    container_name: books-go
    ports:
      - '3000:3000'
    image: 'torbendury/books-go'
    depends_on:
      - postgres
    build:
      context: ../
      dockerfile: Dockerfile
    restart: unless-stopped
    command:
      - -postgres
      - -pghost=postgres
      - -pgport=5432
      - -pguser=${POSTGRES_USER:-postgres}
      - -pgpass=${POSTGRES_PASSWORD:-changeme}
      - -pgdatabase=postgres
volumes:
  postgres:
  pgadmin:
